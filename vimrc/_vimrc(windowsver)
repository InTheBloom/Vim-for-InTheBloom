set belloff=all
set directory=~/vimbackup
set backupdir=~/vimbackup
" 実際に使うときは~/vimbackupを作ってください
set noundofile
set number
set cursorline
set hidden
set backspace=2
set splitbelow
set termwinsize=15x0
set noequalalways
set autoindent
" 前の行のインデントを受け継ぐ
set smartindent
set cindent
" c言語風のキーワードに反応して字下げを行う
set breakindent
set textwidth=0
autocmd FileType text setlocal textwidth=0
" 勝手にtextwidthが変えられて改行が発生してしまう現象の対処
set title
set laststatus=2
set tabstop=4
set softtabstop=4
set shiftwidth=4
set noexpandtab
set nolist
set listchars=tab:>_,trail:␣,nbsp:%,eol:↲
set t_Co=256
syntax on
set hlsearch
colorscheme industry
" expandtabとlistは必要に応じて使ってください
" set hlsearchは検索ハイライトの機能です。オフにしたいときはset nohlsearchを入力してください。直近の検索のみオフにしたい場合はnohを入力してください。

" vim標準のファイラの設定
let g:netrw_banner=0
let g:netrw_liststyle=0
let g:netrw_browse_split=4
let g:netrw_preview=1
let g:netrw_winsize=80
let g:netrw_fastbrowse=1

" インデントを可視化するプラグイン"vim-indent-guides" by nathanaelkane の設定
let g:indent_guides_enable_on_vim_startup=1
let g:indent_guides_auto_colors=0
autocmd VimEnter,Colorscheme * :hi IndentGuidesOdd guibg=#a3e4a6 ctermbg=145
autocmd VimEnter,Colorscheme * :hi IndentGuidesEven guibg=#ea9dc6 ctermbg=151
let g:indent_guides_start_level=1
let g:indent_guides_guide_size=1

hi SpecialKey ctermfg=16 guifg=#000000
hi CursorLine cterm=NONE term=NONE ctermfg=NONE ctermbg=242

if &diffopt !~# 'internal'
  set diffexpr=MyDiff()
endif
function MyDiff()
  let opt = '-a --binary '
  if &diffopt =~ 'icase' | let opt = opt . '-i ' | endif
  if &diffopt =~ 'iwhite' | let opt = opt . '-b ' | endif
  let arg1 = v:fname_in
  if arg1 =~ ' ' | let arg1 = '"' . arg1 . '"' | endif
  let arg1 = substitute(arg1, '!', '\!', 'g')
  let arg2 = v:fname_new
  if arg2 =~ ' ' | let arg2 = '"' . arg2 . '"' | endif
  let arg2 = substitute(arg2, '!', '\!', 'g')
  let arg3 = v:fname_out
  if arg3 =~ ' ' | let arg3 = '"' . arg3 . '"' | endif
  let arg3 = substitute(arg3, '!', '\!', 'g')
  if $VIMRUNTIME =~ ' '
    if &sh =~ '\<cmd'
      if empty(&shellxquote)
        let l:shxq_sav = ''
        set shellxquote&
      endif
      let cmd = '"' . $VIMRUNTIME . '\diff"'
    else
      let cmd = substitute($VIMRUNTIME, ' ', '" ', '') . '\diff"'
    endif
  else
    let cmd = $VIMRUNTIME . '\diff'
  endif
  let cmd = substitute(cmd, '!', '\!', 'g')
  silent execute '!' . cmd . ' ' . opt . arg1 . ' ' . arg2 . ' > ' . arg3
  if exists('l:shxq_sav')
    let &shellxquote=l:shxq_sav
  endif
endfunction
